<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">
	
	
	<!-- 数据库连接的信息  都在properties文件中 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application-test-mysql.properties</value>
			</list>
		</property>
	</bean>
	<!-- 配置datasource conn  DB-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver.class}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
<!--         <property name="testConnectionOnCheckin" value="${c3p0.testConnectionOnCheckin}"/> -->
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
        <property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}"/>
        <property name="breakAfterAcquireFailure" value="${c3p0.breakAfterAcquireFailure}"/>
<!--         <property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/> -->
 </bean>
		<bean id="sqlSessionFactory" 
	class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载mybatis的配置文件 -->
		<!-- <property name="configLocation" 
		value="classpath:configuration.xml"></property> -->
		<!-- 加载数据库信息 -->
		<property name="dataSource" ref="dataSource"></property>
		
		 <property name="mapperLocations"  value="classpath*:com/xz/model/*Mapper.xml" />  
              
        <property name="typeAliasesPackage" value="com.xz.model" />
	</bean>
	
	<!-- sqlsession -->
	<bean id="st" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory">
		</constructor-arg>	
	</bean>
	<!--  包级扫描 -->
	<context:component-scan base-package="com">
	</context:component-scan>
	<mvc:annotation-driven />
	<mvc:default-servlet-handler/> 
	
	<!-- 开启事务注解驱动 -->  
    <tx:annotation-driven />
    
    <bean id="transactionManager" 
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"></property>
    </bean>
    
<!--    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"  
        p:prefix="/WEB-INF/view/" p:suffix=".jsp">  
        <property name="viewClass">             
            <value>org.springframework.web.servlet.view.JstlView</value>              
        </property>  
    </bean>   -->
<!--  文件上传必要配置 -->
<!-- 	<bean id="multipartResolver" -->
<!-- 		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" -->
<!-- 		p:defaultEncoding="utf-8"> -->
<!-- 	</bean> -->
	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	     <property name="maxUploadSize" value="104857600" />
	     <property name="maxInMemorySize" value="4096" />
	     <property name="defaultEncoding" value="UTF-8"></property>
     </bean>
<!-- <mvc:interceptors>   -->
    <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->  
<!--          <bean class="com.youma.interceptor.MyInterceptor"/>   -->
<!--         <mvc:interceptor>   -->
<!--              <mvc:mapping path="/RegisterController.do"/>   -->
<!--                 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的   -->
<!--                 <bean class="web.interceptor.MyInterceptor2"/>   -->
<!--          </mvc:interceptor>   -->
<!--  </mvc:interceptors>	 -->


 	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
			</list>
		</property>
 </bean>


	
 
</beans>