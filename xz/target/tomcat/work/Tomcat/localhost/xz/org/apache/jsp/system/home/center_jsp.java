/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-10-12 02:13:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.system.home;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class center_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("  \n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" charset=\"UTF-8\">\n");
      out.write("\t$(function(){\n");
      out.write("\tvar editRow = undefined; //用于 记录正在编辑的行数\n");
      out.write("\t\t$('#datagrid').datagrid({\n");
      out.write("\t\t\turl:\"showList.do\",//\n");
      out.write("\t\t//\ttitle:\"第一个列表\",\n");
      out.write("\t\t\ticonCls:\"icon-save\",\n");
      out.write("\t\t\tpagination:true,\n");
      out.write("\t\t\tfit:true, //为了宽高自适应\n");
      out.write("\t\t\t//fitColumns:false,//界面缩小是否显示横向滚动条 false 有 true 没有  做冻结列不能具备该属性\n");
      out.write("\t\t\tpageSize:5,\n");
      out.write("\t\t\n");
      out.write("\t\t\tpageList:[5,10,15],//上面每页显示行数 下部分 多选 必须为上部分倍数\n");
      out.write("\t\t\tnowrap:true,//是否 换行 默认true 不换行\n");
      out.write("\t\t\tborder:false,\n");
      out.write("\t\t\tidFiled:\"id\",//作为 唯一标识 翻页能够被记录\n");
      out.write("\t\t\t//冻结列滚动条的起始位位置横向  被冻结的下方无滚动条\n");
      out.write("// \t\t\tfrozenColumns:[[{field:'id',title:'Code',width:100,sortable:true,checkbox:true},\n");
      out.write("// \t\t\t\t\t\t{field:'username',title:'用户名',width:100,//datetimebox 需要扩展\n");
      out.write("// \t\t\t\t\t\t\teditor:{type:'validatebox',options:{required:true}}//此属性让改列具备被编辑特性 需要开启编辑状态  否则这里写了不起效果\n");
      out.write("// \t\t\t\t\t\t}]],\n");
      out.write("\t\t\tcolumns:[[\n");
      out.write("\t\t\t\t\t\t{field:'id',title:'Code',width:100,sortable:true,checkbox:true},\n");
      out.write("\t\t\t\t\t\t{field:'username',title:'用户名',width:100,//datetimebox 需要扩展\n");
      out.write("\t\t\t\t\t\t\teditor:{type:'validatebox',options:{required:true}}//此属性让改列具备被编辑特性 需要开启编辑状态  否则这里写了不起效果\n");
      out.write("\t\t\t\t\t\t},{field:'password',title:'密码',width:100,\n");
      out.write("\t\t\t\t\t\t\teditor:{type:'validatebox',options:{required:true}}\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t    ]],\n");
      out.write("\t\t    toolbar:[\n");
      out.write("\t\t    \t\t\t{iconCls:'icon-add',text:'增加',handler:function(){\n");
      out.write("// \t\t\t    \t\t\tif(editRow != undefined){\n");
      out.write("// \t\t\t    \t\t\t\t$(\"#datagrid\").datagrid(\"endEdit\",0);\n");
      out.write("// \t\t\t    \t\t\t}\n");
      out.write("\t\t\t    \t\t\tif(editRow == undefined){\n");
      out.write("\t\t\t    \t\t\t\t$('#datagrid').datagrid('addEditor',{//扩展的方法\n");
      out.write("\t\t\t\t\t    \t\t\t\t\tfiled:'username',//改变哪个列\n");
      out.write("\t\t\t\t\t    \t\t\t\t\teditor:{type:'validatebox',options:{required:true}}\n");
      out.write("\t\t\t\t    \t\t\t\t});\n");
      out.write("\t\t\t    \t\t\t\n");
      out.write("\t\t\t    \t\t\t\t\t$('#datagrid').datagrid('insertRow',{\n");
      out.write("\t\t\t\t\t    \t\t\t\t\tindex:0,//起始位置\n");
      out.write("\t\t\t\t\t    \t\t\t\t\trow:{\n");
      out.write("\t\t\t\t\t    \t\t\t\t\t\tusername:'ccc'\n");
      out.write("\t\t\t\t\t    \t\t\t\t\t}\n");
      out.write("\t\t\t\t    \t\t\t\t});\n");
      out.write("\t\t\t\t    \t\t\t\t$(\"#datagrid\").datagrid(\"beginEdit\",0);//手动开启 编辑模式  第二个参数为 哪一行\n");
      out.write("\t\t\t\t    \t\t\t\teditRow=0;//增加后记录索引\n");
      out.write("\t\t\t    \t\t\t}\n");
      out.write("\t\t    \t\t\t\n");
      out.write("\t\t    \t\t\t}},'-',//此处作用为添加分隔符\n");
      out.write("\t\t    \t\t\t{iconCls:'icon-remove',text:'删除',handler:function(){\n");
      out.write("\t\t    \t\t\t\tvar rows = $(\"#datagrid\").datagrid(\"getSelections\");//所有被选中的行\n");
      out.write("\t\t    \t\t\t\tif(rows.length>0){\n");
      out.write("\t\t    \t\t\t\t\t$.messager.confirm('请确认', \"Are You Sure ?\", function(b){//确定为true 取消fasle\n");
      out.write("\t\t    \t\t\t\t\t\tif(b){\n");
      out.write("\t\t    \t\t\t\t\t\t\tvar ids = [];\n");
      out.write("\t\t    \t\t\t\t\t\t\tfor(var i =0 ; i < rows.length;i++){\n");
      out.write("\t\t    \t\t\t\t\t\t\t\tids.push(rows[i].id);\n");
      out.write("\t\t    \t\t\t\t\t\t\t}\n");
      out.write("\t\t    \t\t\t\t\t\t\tconsole.info(ids.join(\",\"));\n");
      out.write("\t\t    \t\t\t\t\t\t\t//ajax 删除成功后 调用一次刷新     \t$(\"#datagrid\").datagrid(\"unselectAll\");//取消选中\n");
      out.write("\t\t    \t\t\t\t\t\t\t\n");
      out.write("\t\t    \t\t\t\t\t\t}\n");
      out.write("\t\t    \t\t\t\t\t});\n");
      out.write("\t\t    \t\t\t\t}else{\n");
      out.write("\t\t    \t\t\t\t\t$.messager.alert(\"提示\",\"无选择项\",\"error\");\n");
      out.write("\t\t    \t\t\t\t}\n");
      out.write("\t\t    \t\t\t\t\n");
      out.write("\t\t    \t\t\t}},\n");
      out.write("\t\t    \t\t\t{iconCls:'icon-edit',text:'编辑',handler:function(){\n");
      out.write("\t\t    \t\t\t\tvar rows = $(\"#datagrid\").datagrid(\"getSelections\");\n");
      out.write("\t\t    \t\t\t\tif(rows.length==1){\n");
      out.write("\t\t    \t\t\t\t\n");
      out.write("\t\t    \t\t\t\t\t\t$('#datagrid').datagrid('removeEditor','password');//扩展的方法 可以传入数组定义多个禁止填写\n");
      out.write("\t\t\t    \t\t\t\n");
      out.write("\t\t    \t\t\t\t\n");
      out.write("\t\t    \t\t\t\t\t\tif(editRow != undefined){\n");
      out.write("\t\t\t    \t\t\t\t\t\t$(\"#datagrid\").datagrid(\"endEdit\",editRow);\n");
      out.write("\t\t\t\t\t    \t\t\t}\n");
      out.write("\t\t\t\t\t    \t\t\tif(editRow == undefined){\n");
      out.write("\t\t\t\t\t\t    \t\t\tvar index = $(\"#datagrid\").datagrid(\"getRowIndex\",rows[0]);\n");
      out.write("\t\t\t\t\t\t\t\t    \t$(\"#datagrid\").datagrid(\"beginEdit\",index);//手动开启 编辑模式  第二个参数为 哪一行\n");
      out.write("\t\t\t\t\t    \t\t\t\teditRow=index;//增加后记录索引\n");
      out.write("\t\t\t\t\t    \t\t\t\t//$(\"#datagrid\").datagrid(\"unselectAll\");//可直接选中下一条 但会往后台传入数据\n");
      out.write("\t\t\t\t\t    \t\t\t}\n");
      out.write("\t\t    \t\t\t\t\n");
      out.write("\t\t    \t\t\t\t}else{\n");
      out.write("\t\t    \t\t\t\t\t$.messager.alert(\"提示\",\"请只选择一行\");\n");
      out.write("\t\t    \t\t\t\t}\n");
      out.write("\t\t    \t\t\t}},\n");
      out.write("\t\t    \t\t\t{iconCls:'icon-search',text:'查看',handler:function(){\n");
      out.write("\t\t    \t\t\t\n");
      out.write("\t\t    \t\t\t}},'-',{iconCls:'icon-save',text:'保存',handler:function(){\n");
      out.write("\t\t\t    \t\t\t\t\tif(editRow != undefined){//保存撤销编辑状态\n");
      out.write("\t \t\t\t    \t\t\t\t$(\"#datagrid\").datagrid(\"endEdit\",editRow);\n");
      out.write("\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t    \t\t\t}},'-',{iconCls:'icon-redo',text:'撤销',handler:function(){\n");
      out.write("\t\t\t    \t\t\t\t\teditRow = undefined;\n");
      out.write("\t\t\t    \t\t\t\t\t$(\"#datagrid\").datagrid(\"rejectChanges\");\n");
      out.write("\t\t\t    \t\t\t\t\t$(\"#datagrid\").datagrid(\"unselectAll\");//取消选中\n");
      out.write("\t\t    \t\t\t}}\n");
      out.write("\t\t    \t\t],\n");
      out.write("\t\t\t    onAfterEdit:function(rowIndex, rowData, changes){//调用endEdit 方法会自动执行\n");
      out.write("\t\t\t   \t\tconsole.info(rowData);\n");
      out.write("\t\t\t   \t\t//插入 编辑 同理\n");
      out.write("\t\t\t   \t\tvar insert = $(\"#datagrid\").datagrid(\"getChanges\",\"inserted\");//获取 第二个参数为编辑方式\n");
      out.write("\t\t\t   \t\tvar update = $(\"#datagrid\").datagrid(\"getChanges\",\"updated\");\n");
      out.write("\t\t\t   \t\tif(insert.length<1&&update.length<1){\n");
      out.write("\t\t\t   \t\t\teditRow = undefined;\n");
      out.write("\t\t\t   \t\t\t$(\"#datagrid\").datagrid(\"unselectAll\");\n");
      out.write("\t\t\t   \t\t}\n");
      out.write("\t\t\t   \t\tvar  url = \"\";\n");
      out.write("\t\t\t   \t\tif(insert>0){\n");
      out.write("\t\t\t   \t\t\turl=\"xxx!ccc.do\";\n");
      out.write("\t\t\t   \t\t}\n");
      out.write("\t\t\t   \t\t//调用 ajax 成功之后调用  $(\"#datagrid\").datagrid(\"accpetChanges\") 告诉前台后台已经改变 无法撤回\n");
      out.write("\t\t\t   \t\t//失败调用回滚\n");
      out.write("\t\t\t   \t\teditRow=undefined;//放在ajax 内部 防止异步未执行时执行 然后执行取消选中$(\"#datagrid\").datagrid(\"unselectAll\");\n");
      out.write("\t\t\t    },onDblClickRow:function(rowIndex, rowData){//添加双击事件\n");
      out.write("\t\t\t    \n");
      out.write("\t\t\t    \t\t\tif(editRow != undefined){\n");
      out.write("\t\t\t    \t\t\t\t$(\"#datagrid\").datagrid(\"endEdit\",editRow);\n");
      out.write("\t\t\t    \t\t\t}\n");
      out.write("\t\t\t    \t\t\tif(editRow == undefined){\n");
      out.write("\t\t\t    \t\t\tconsole.info(rowIndex);\n");
      out.write("\t\t\t\t\t\t    \t$(\"#datagrid\").datagrid(\"beginEdit\",rowIndex);//手动开启 编辑模式  第二个参数为 哪一行\n");
      out.write("\t\t\t    \t\t\t\teditRow=rowIndex;//增加后记录索引\n");
      out.write("\t\t\t    \t\t\t}\n");
      out.write("\t\t\t    },onRowContextMenu:function(e, rowIndex, rowData){\n");
      out.write("\t\t\t    \te.preventDefault();\n");
      out.write("\t\t\t    \t$(this).datagrid(\"unselectAll\");\n");
      out.write("\t\t\t    \t$(this).datagrid(\"selectRow\",rowIndex);\n");
      out.write("\t\t\t    \t$('#menu').menu('show', {\n");
      out.write("\t\t\t\t\t    left: e.clientX,\n");
      out.write("\t\t\t\t\t    top: e.clientY\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t    }\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("\tfunction sub(){\n");
      out.write("\tconsole.info(xz.serializeObject($(\"#xz_search\").form()));\n");
      out.write("\t//reload 会停留在当前页面  查询 serializeObject自动洗序列化 并转换为对象\n");
      out.write("\t\t$(\"#datagrid\").datagrid('load',xz.serializeObject($(\"#xz_search\").form()));\n");
      out.write("\t}\n");
      out.write("\tfunction xclear(){\n");
      out.write("\t\n");
      out.write("\t\t$(\"#datagrid\").datagrid('load',{});\n");
      out.write("\t\t$(\"#xz_search\").find('input').val('');\n");
      out.write("\t}\n");
      out.write("</script>\r\n");
      out.write("<!-- 两种方式都可以 -->\r\n");
      out.write("<!-- <div class=\"easyui-tabs\" fit=\"true\" border=\"false\" > -->\r\n");
      out.write("<!-- \t<div title=\"UserManger\" border=\"false\"> -->\n");
      out.write("<!-- \t\t<table id=\"datagrid\"></table> -->\n");
      out.write("<!-- \t</div> -->\r\n");
      out.write("<!-- </div> -->\n");
      out.write("\n");
      out.write("\t<div class=\"easyui-layout\" fit=\"true\" border=\"false\" >\n");
      out.write("\t\t<div region=\"north\" border=\"false\" title=\"筛选\" style=\"height:100px;overflow:hidden\">\n");
      out.write("\t\t\t<form id = \"xz_search\">\n");
      out.write("\t\t\t\t<table class= \"datagrid-toolbar\" style=\"with:100%;height:100%\">\n");
      out.write("\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<th>用户名</th>\n");
      out.write("\t\t\t\t\t\t<td><input name=\"username\"/></td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t</table>\n");
      out.write("\t\t\t\t<a id=\"btn\" href=\"#\" class=\"easyui-linkbutton\" onclick=\"sub()\" >查询</a>\n");
      out.write("\t\t\t\t<a id=\"btn\" href=\"#\" class=\"easyui-linkbutton\" onclick=\"xclear()\" >清空</a>\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div region=\"center\" border=\"false\">\n");
      out.write("\t\t\t<table id=\"datagrid\"></table>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div id = \"menu\" class=\"easyui-menu\" style=\"width: 120px;display: none;\">\n");
      out.write("\t\t\t<div onclick=\"\" iconCls=\"icon-add\">增加</div>\n");
      out.write("\t\t\t<div onclick=\"\">增加</div>\n");
      out.write("\t\t\t<div onclick=\"\">增加</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
